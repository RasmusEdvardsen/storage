{"remainingRequest":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js!/home/git/homestorage/homeweb/node_modules/ts-loader/index.js??ref--13-2!/home/git/homestorage/homeweb/src/azure/copyBlob.ts","dependencies":[{"path":"/home/git/homestorage/homeweb/src/azure/copyBlob.ts","mtime":1586434586906},{"path":"/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { ContainerURL, BlobURL, Aborter } from \"@azure/storage-blob\";\nimport getServiceUrl from \"./serviceUrl\";\nexport default function copyBlob(_x, _x2, _x3) {\n  return _copyBlob.apply(this, arguments);\n}\n\nfunction _copyBlob() {\n  _copyBlob = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(containerName, oldName, newName) {\n    var serviceURL, containerURL, blobURL, fromBlobURL, copyBlockBlobResponse;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getServiceUrl();\n\n          case 3:\n            serviceURL = _context.sent;\n            containerURL = ContainerURL.fromServiceURL(serviceURL, containerName);\n            blobURL = BlobURL.fromContainerURL(containerURL, newName);\n            fromBlobURL = BlobURL.fromContainerURL(containerURL, oldName);\n            _context.next = 9;\n            return blobURL.startCopyFromURL(Aborter.none, fromBlobURL.url);\n\n          case 9:\n            copyBlockBlobResponse = _context.sent;\n            return _context.abrupt(\"return\", copyBlockBlobResponse._response.status);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", 500);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n  return _copyBlob.apply(this, arguments);\n}",{"version":3,"sources":["/home/git/homestorage/homeweb/src/azure/copyBlob.ts"],"names":[],"mappings":";;AAAA,SAAqB,YAArB,EAAmC,OAAnC,EAA4C,OAA5C,QAA2D,qBAA3D;AACA,OAAO,aAAP;AAEA,wBAA8B,QAA9B;AAAA;AAAA;;;sEAAe,iBAAwB,aAAxB,EAA+C,OAA/C,EAAgE,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE8B,aAAa,EAF3C;;AAAA;AAED,YAAA,UAFC;AAGD,YAAA,YAHC,GAGc,YAAY,CAAC,cAAb,CAA4B,UAA5B,EAAwC,aAAxC,CAHd;AAID,YAAA,OAJC,GAIS,OAAO,CAAC,gBAAR,CAAyB,YAAzB,EAAuC,OAAvC,CAJT;AAKD,YAAA,WALC,GAKa,OAAO,CAAC,gBAAR,CAAyB,YAAzB,EAAuC,OAAvC,CALb;AAAA;AAAA,mBAM6B,OAAO,CAAC,gBAAR,CAAyB,OAAO,CAAC,IAAjC,EAAuC,WAAW,CAAC,GAAnD,CAN7B;;AAAA;AAMD,YAAA,qBANC;AAAA,6CAOA,qBAAqB,CAAC,SAAtB,CAAgC,MAPhC;;AAAA;AAAA;AAAA;AAAA,6CASA,GATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { ServiceURL, ContainerURL, BlobURL, Aborter } from \"@azure/storage-blob\";\r\nimport getServiceUrl from \"./serviceUrl\";\r\n\r\nexport default async function copyBlob(containerName: string, oldName: string, newName: string): Promise<number> {\r\n    try {\r\n        const serviceURL: ServiceURL = await getServiceUrl();\r\n        const containerURL = ContainerURL.fromServiceURL(serviceURL, containerName);\r\n        const blobURL = BlobURL.fromContainerURL(containerURL, newName);\r\n        const fromBlobURL = BlobURL.fromContainerURL(containerURL, oldName);\r\n        const copyBlockBlobResponse = await blobURL.startCopyFromURL(Aborter.none, fromBlobURL.url);\r\n        return copyBlockBlobResponse._response.status;\r\n    } catch (error) {\r\n        return 500;\r\n    }\r\n}\r\n"],"sourceRoot":""}]}
{"remainingRequest":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js!/home/git/homestorage/homeweb/node_modules/ts-loader/index.js??ref--13-2!/home/git/homestorage/homeweb/src/azure/createFolder.ts","dependencies":[{"path":"/home/git/homestorage/homeweb/src/azure/createFolder.ts","mtime":1586434586906},{"path":"/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { BlobURL, BlockBlobURL, Aborter, ContainerURL } from \"@azure/storage-blob\";\nimport getServiceUrl from \"./serviceUrl\";\nexport default function createFolder(_x, _x2) {\n  return _createFolder.apply(this, arguments);\n}\n\nfunction _createFolder() {\n  _createFolder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(containerName, folderName) {\n    var serviceURL, containerURL, blobURL, blockBlobURL, uploadBlobResponse;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getServiceUrl();\n\n          case 2:\n            serviceURL = _context.sent;\n            containerURL = ContainerURL.fromServiceURL(serviceURL, containerName);\n            blobURL = BlobURL.fromContainerURL(containerURL, folderName + \"/dummy.txt\");\n            blockBlobURL = BlockBlobURL.fromBlobURL(blobURL);\n            _context.next = 8;\n            return blockBlobURL.upload(Aborter.none, \"\", 0);\n\n          case 8:\n            uploadBlobResponse = _context.sent;\n            return _context.abrupt(\"return\", uploadBlobResponse._response.status);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createFolder.apply(this, arguments);\n}",{"version":3,"sources":["/home/git/homestorage/homeweb/src/azure/createFolder.ts"],"names":[],"mappings":";;AAAA,SACI,OADJ,EAEI,YAFJ,EAGI,OAHJ,EAII,YAJJ,QAMO,qBANP;AAOA,OAAO,aAAP;AAEA,wBAA8B,YAA9B;AAAA;AAAA;;;0EAAe,iBAA4B,aAA5B,EAAmD,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0B,aAAa,EADvC;;AAAA;AACL,YAAA,UADK;AAGL,YAAA,YAHK,GAGU,YAAY,CAAC,cAAb,CAA4B,UAA5B,EAAwC,aAAxC,CAHV;AAIL,YAAA,OAJK,GAIK,OAAO,CAAC,gBAAR,CAAyB,YAAzB,EAAuC,UAAU,GAAG,YAApD,CAJL;AAKL,YAAA,YALK,GAKU,YAAY,CAAC,WAAb,CAAyB,OAAzB,CALV;AAAA;AAAA,mBAMsB,YAAY,CAAC,MAAb,CAC7B,OAAO,CAAC,IADqB,EAE7B,EAF6B,EAG7B,CAH6B,CANtB;;AAAA;AAML,YAAA,kBANK;AAAA,6CAYJ,kBAAkB,CAAC,SAAnB,CAA6B,MAZzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {\r\n    BlobURL,\r\n    BlockBlobURL,\r\n    Aborter,\r\n    ContainerURL,\r\n    ServiceURL,\r\n} from \"@azure/storage-blob\";\r\nimport getServiceUrl from \"./serviceUrl\";\r\n\r\nexport default async function createFolder(containerName: string, folderName: string ): Promise<number> {\r\n    const serviceURL: ServiceURL = await getServiceUrl();\r\n\r\n    const containerURL = ContainerURL.fromServiceURL(serviceURL, containerName);\r\n    const blobURL = BlobURL.fromContainerURL(containerURL, folderName + \"/dummy.txt\");\r\n    const blockBlobURL = BlockBlobURL.fromBlobURL(blobURL);\r\n    const uploadBlobResponse = await blockBlobURL.upload(\r\n        Aborter.none,\r\n        \"\",\r\n        0,\r\n    );\r\n\r\n    return uploadBlobResponse._response.status;\r\n}\r\n"],"sourceRoot":""}]}
{"remainingRequest":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js!/home/git/homestorage/homeweb/node_modules/ts-loader/index.js??ref--13-2!/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/git/homestorage/homeweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/git/homestorage/homeweb/src/homestorage/components/treeItem.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/git/homestorage/homeweb/src/homestorage/components/treeItem.vue","mtime":1586434586906},{"path":"/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/git/homestorage/homeweb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/git/homestorage/homeweb/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { __decorate } from \"tslib\";\nimport Vue from \"vue\";\nimport { Component, Prop } from \"vue-property-decorator\";\nimport { Action, Getter } from \"vuex-class\";\nimport Dropdown from \"@/generic/dropdown.vue\";\nimport { EventBus, Event as CustomEvents } from \"@/homestorage/eventBus.ts\";\nvar namespace = \"homeStorage\";\n\nvar TreeItem = /*#__PURE__*/function (_Vue) {\n  _inherits(TreeItem, _Vue);\n\n  var _super = _createSuper(TreeItem);\n\n  function TreeItem() {\n    var _this;\n\n    _classCallCheck(this, TreeItem);\n\n    _this = _super.apply(this, arguments);\n    _this.isOpen = false;\n    _this.toggle = false;\n    _this.showFolderInput = false;\n    _this.showNewFileInput = false;\n    _this.folderName = \"\";\n    _this.newFileName = \"\";\n    return _this;\n  }\n\n  _createClass(TreeItem, [{\n    key: \"itemClick\",\n    value: function itemClick(item) {\n      if (this.isFolder) {\n        this.isOpen = !this.isOpen;\n      } else if (item.fullPath) {\n        this.setActiveBlob(item.fullPath);\n      }\n    }\n  }, {\n    key: \"rename\",\n    value: function () {\n      var _rename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(item) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.toggle = false;\n                this.showNewFileInput = true;\n                this.focusOnInput(\"fileNameInput\");\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function rename(_x) {\n        return _rename.apply(this, arguments);\n      }\n\n      return rename;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(item) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.toggle = false;\n\n                if (!confirm(\"Really delete \".concat(item.name, \"?\"))) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 4;\n                return this.deleteFile({\n                  containerName: \"homestorage\",\n                  name: item.fullPath\n                });\n\n              case 4:\n                _context2.next = 6;\n                return this.getBlobsByContainer(\"homestorage\");\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function del(_x2) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }, {\n    key: \"newFileNameEntered\",\n    value: function () {\n      var _newFileNameEntered = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var fullPath, path, extensionArr, extension, fileName, oldName, newName;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.showNewFileInput = false;\n\n                if (!(this.newFileName.length < 1 && !this.item.fullPath)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                fullPath = this.item.fullPath;\n                path = fullPath.split(\"/\").slice(0, -1).join(\"/\");\n                extensionArr = this.item.name.split(\".\");\n                extension = extensionArr[extensionArr.length - 1];\n                fileName = path.length > 0 ? path + \"/\" + this.newFileName + \".\" + extension : this.newFileName + \".\" + extension;\n                oldName = this.item.fullPath || this.item.name;\n                newName = fileName;\n                _context3.next = 12;\n                return this.renameFile({\n                  containerName: \"homestorage\",\n                  oldName: oldName,\n                  newName: newName\n                });\n\n              case 12:\n                _context3.next = 14;\n                return this.getBlobsByContainer(\"homestorage\");\n\n              case 14:\n                this.showNewFileInput = false;\n                this.newFileName = \"\";\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function newFileNameEntered() {\n        return _newFileNameEntered.apply(this, arguments);\n      }\n\n      return newFileNameEntered;\n    }()\n  }, {\n    key: \"newFolderOption\",\n    value: function () {\n      var _newFolderOption = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.closeContextMenuAndOpenFolder();\n                this.showFolderInput = true;\n                this.focusOnInput(\"folderNameInput\");\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function newFolderOption() {\n        return _newFolderOption.apply(this, arguments);\n      }\n\n      return newFolderOption;\n    }()\n  }, {\n    key: \"newFolderEntered\",\n    value: function () {\n      var _newFolderEntered = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var fullPath, folderName;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                fullPath = this.item.fullPath;\n\n                if (!(this.folderName.length < 1 && !this.item.fullPath)) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 3:\n                folderName = fullPath.length > 0 ? fullPath + \"/\" + this.folderName : this.folderName;\n                _context5.next = 6;\n                return this.createFolder({\n                  containerName: \"homestorage\",\n                  folderName: folderName\n                });\n\n              case 6:\n                _context5.next = 8;\n                return this.getBlobsByContainer(\"homestorage\");\n\n              case 8:\n                this.showFolderInput = false;\n                this.folderName = \"\";\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function newFolderEntered() {\n        return _newFolderEntered.apply(this, arguments);\n      }\n\n      return newFolderEntered;\n    }()\n  }, {\n    key: \"newFilesSelected\",\n    value: function () {\n      var _newFilesSelected = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(e) {\n        var fileList, newFiles;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.closeContextMenuAndOpenFolder();\n                fileList = e.target.files;\n\n                if (!(!fileList || fileList.length < 1)) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 4:\n                if (this.item.fullPath) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 6:\n                newFiles = {\n                  fileList: fileList,\n                  folderPath: this.item.fullPath\n                };\n                EventBus.$emit(CustomEvents.NEWFILES, newFiles);\n                return _context6.abrupt(\"return\");\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function newFilesSelected(_x3) {\n        return _newFilesSelected.apply(this, arguments);\n      }\n\n      return newFilesSelected;\n    }()\n  }, {\n    key: \"focusOnInput\",\n    value: function () {\n      var _focusOnInput = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(ref) {\n        var keyVal, input;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$nextTick();\n\n              case 2:\n                _context7.prev = 2;\n                keyVal = Object.entries(this.$refs).find(function (x) {\n                  return x[0] === ref;\n                });\n\n                if (keyVal) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 6:\n                input = keyVal[1];\n                input.focus();\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](2);\n                return _context7.abrupt(\"return\");\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 10]]);\n      }));\n\n      function focusOnInput(_x4) {\n        return _focusOnInput.apply(this, arguments);\n      }\n\n      return focusOnInput;\n    }()\n  }, {\n    key: \"closeContextMenuAndOpenFolder\",\n    value: function closeContextMenuAndOpenFolder() {\n      this.toggle = false;\n      this.isOpen = true;\n    }\n  }, {\n    key: \"isFolder\",\n    get: function get() {\n      return this.item.children && this.item.children.length;\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      var str = \"far \" + (this.isFolder ? this.isOpen ? \"fa-folder-open\" : \"fa-folder\" : \" fa-file\");\n      return str;\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.activeBlob && this.activeBlob.name === this.item.fullPath ? \"active\" : \"\";\n    }\n  }]);\n\n  return TreeItem;\n}(Vue);\n\n__decorate([Prop()], TreeItem.prototype, \"item\", void 0);\n\n__decorate([Action(\"setActiveBlob\", {\n  namespace: namespace\n})], TreeItem.prototype, \"setActiveBlob\", void 0);\n\n__decorate([Action(\"getBlobsByContainer\", {\n  namespace: namespace\n})], TreeItem.prototype, \"getBlobsByContainer\", void 0);\n\n__decorate([Action(\"createFolder\", {\n  namespace: namespace\n})], TreeItem.prototype, \"createFolder\", void 0);\n\n__decorate([Action(\"renameFile\", {\n  namespace: namespace\n})], TreeItem.prototype, \"renameFile\", void 0);\n\n__decorate([Action(\"deleteFile\", {\n  namespace: namespace\n})], TreeItem.prototype, \"deleteFile\", void 0);\n\n__decorate([Getter(\"activeBlob\", {\n  namespace: namespace\n})], TreeItem.prototype, \"activeBlob\", void 0);\n\nTreeItem = __decorate([Component({\n  name: \"tree-item\",\n  components: {\n    dropdown: Dropdown\n  }\n})], TreeItem);\nexport default TreeItem;",{"version":3,"sources":["/home/git/homestorage/homeweb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/git/homestorage/homeweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/git/homestorage/homeweb/src/homestorage/components/treeItem.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from \"vue\";\r\nimport { Component, Prop, Watch } from \"vue-property-decorator\";\r\n\r\nimport { Action, Getter } from \"vuex-class\";\r\n\r\nimport { BlobItem } from \"@azure/storage-blob/typings/src/generated/src/models\";\r\n\r\nimport Dropdown from \"@/generic/dropdown.vue\";\r\n\r\nimport * as log from \"@/log/log\";\r\n\r\nimport {\r\n  EventBus,\r\n  Event as CustomEvents,\r\n  IEventNewFiles,\r\n} from \"@/homestorage/eventBus.ts\";\r\n\r\nconst namespace = \"homeStorage\";\r\n\r\n@Component({\r\n  name: \"tree-item\",\r\n  components: {\r\n    dropdown: Dropdown,\r\n  },\r\n})\r\nexport default class TreeItem extends Vue {\r\n  @Prop() public item!: any;\r\n  @Action(\"setActiveBlob\", { namespace }) public setActiveBlob: any;\r\n  @Action(\"getBlobsByContainer\", { namespace }) public getBlobsByContainer: any;\r\n  @Action(\"createFolder\", { namespace }) public createFolder: any;\r\n  @Action(\"renameFile\", { namespace }) public renameFile: any;\r\n  @Action(\"deleteFile\", { namespace }) public deleteFile: any;\r\n  @Getter(\"activeBlob\", { namespace }) public activeBlob!: BlobItem;\r\n\r\n  public isOpen: boolean = false;\r\n  public toggle: boolean = false;\r\n\r\n  public showFolderInput: boolean = false;\r\n  public showNewFileInput: boolean = false;\r\n\r\n  public folderName: string = \"\";\r\n  public newFileName: string = \"\";\r\n\r\n  public $refs!: {\r\n    folderNameInput: HTMLInputElement;\r\n    fileNameInput: HTMLInputElement;\r\n  };\r\n\r\n  get isFolder(): boolean {\r\n    return this.item.children && this.item.children.length;\r\n  }\r\n\r\n  get icon(): string {\r\n    const str =\r\n      \"far \" +\r\n      (this.isFolder\r\n        ? this.isOpen\r\n          ? \"fa-folder-open\"\r\n          : \"fa-folder\"\r\n        : \" fa-file\");\r\n    return str;\r\n  }\r\n\r\n  get isActive() {\r\n    return this.activeBlob && this.activeBlob.name === this.item.fullPath\r\n      ? \"active\"\r\n      : \"\";\r\n  }\r\n\r\n  public itemClick(item: any) {\r\n    if (this.isFolder) {\r\n      this.isOpen = !this.isOpen;\r\n    } else if (item.fullPath) {\r\n      this.setActiveBlob(item.fullPath);\r\n    }\r\n  }\r\n\r\n  public async rename(item: any) {\r\n    this.toggle = false;\r\n    this.showNewFileInput = true;\r\n    this.focusOnInput(\"fileNameInput\");\r\n  }\r\n\r\n  public async del(item: any) {\r\n    this.toggle = false;\r\n    if (confirm(`Really delete ${item.name}?`)) {\r\n      await this.deleteFile({ containerName: \"homestorage\", name: item.fullPath });\r\n      await this.getBlobsByContainer(\"homestorage\");\r\n    }\r\n  }\r\n\r\n  public async newFileNameEntered() {\r\n    this.showNewFileInput = false;\r\n    if (this.newFileName.length < 1 && !this.item.fullPath) {\r\n      return;\r\n    }\r\n    const fullPath: string = this.item.fullPath;\r\n    const path: string = fullPath\r\n      .split(\"/\")\r\n      .slice(0, -1)\r\n      .join(\"/\");\r\n    const extensionArr = (this.item.name as string).split(\".\");\r\n    const extension = extensionArr[extensionArr.length - 1];\r\n    const fileName =\r\n      path.length > 0\r\n        ? path + \"/\" + this.newFileName + \".\" + extension\r\n        : this.newFileName + \".\" + extension;\r\n    const oldName = this.item.fullPath || this.item.name;\r\n    const newName = fileName;\r\n    await this.renameFile({ containerName: \"homestorage\", oldName, newName });\r\n    await this.getBlobsByContainer(\"homestorage\");\r\n    this.showNewFileInput = false;\r\n    this.newFileName = \"\";\r\n  }\r\n\r\n  public async newFolderOption() {\r\n    this.closeContextMenuAndOpenFolder();\r\n    this.showFolderInput = true;\r\n    this.focusOnInput(\"folderNameInput\");\r\n  }\r\n\r\n  public async newFolderEntered() {\r\n    const fullPath: string = this.item.fullPath;\r\n    if (this.folderName.length < 1 && !this.item.fullPath) {\r\n      return;\r\n    }\r\n    const folderName =\r\n      fullPath.length > 0 ? fullPath + \"/\" + this.folderName : this.folderName;\r\n    await this.createFolder({ containerName: \"homestorage\", folderName });\r\n    await this.getBlobsByContainer(\"homestorage\");\r\n    this.showFolderInput = false;\r\n    this.folderName = \"\";\r\n  }\r\n\r\n  public async newFilesSelected(e: Event): Promise<void> {\r\n    this.closeContextMenuAndOpenFolder();\r\n\r\n    const fileList = (e.target as HTMLInputElement).files;\r\n    if (!fileList || fileList.length < 1) {\r\n      return;\r\n    }\r\n    if (!this.item.fullPath) {\r\n      return;\r\n    }\r\n\r\n    const newFiles: IEventNewFiles = {\r\n      fileList,\r\n      folderPath: this.item.fullPath,\r\n    };\r\n    EventBus.$emit(CustomEvents.NEWFILES, newFiles);\r\n\r\n    return;\r\n  }\r\n\r\n  public async focusOnInput(ref: string) {\r\n    await this.$nextTick();\r\n    try {\r\n      const keyVal = Object.entries(this.$refs).find((x) => x[0] === ref);\r\n      if (!keyVal) {\r\n        return;\r\n      }\r\n      const input: HTMLInputElement = keyVal[1];\r\n      input.focus();\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public closeContextMenuAndOpenFolder() {\r\n    this.toggle = false;\r\n    this.isOpen = true;\r\n  }\r\n}\r\n"],"sourceRoot":""}]}